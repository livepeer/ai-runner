ARG PIPELINE=comfyui
ARG BASE_IMAGE=livepeer/ai-runner:live-base-${PIPELINE}
FROM ${BASE_IMAGE}
ARG PIPELINE
ENV PIPELINE=${PIPELINE}

# Install latest stable Go version and system dependencies
RUN apt-get update && apt-get install -y \
    wget \
    libcairo2-dev \
    libgirepository1.0-dev \
    pkg-config \
    && apt-get clean && rm -rf /var/lib/apt/lists/*

# Install any additional Python packages
COPY requirements.live-ai.txt /app/requirements.txt
COPY requirements.live.comfyui.txt /app/requirements.comfyui.txt

# Install requirements in normal env
RUN pip install --no-cache-dir -r /app/requirements.txt;

# Also install in conda env if needed
RUN if [ "$PIPELINE" = "comfyui" ]; then \
    conda run -n comfystream pip install -r /app/requirements.comfyui.txt; \
fi

# TODO: Figure out a way to have this in requirements file
RUN pip install --no-cache-dir triton==3.1.0
RUN pip uninstall -y onnx onnxruntime onnxruntime-gpu
RUN pip install onnx==1.17.0 onnxruntime-gpu==1.17.0

# Set environment variables
ENV MAX_WORKERS=1
ENV HUGGINGFACE_HUB_CACHE=/models
ENV DIFFUSERS_CACHE=/models
ENV MODEL_DIR=/models

# Copy application files
COPY app/ /app/app
COPY images/ /app/images
COPY bench.py /app/bench.py

WORKDIR /app

ARG GIT_SHA
ENV GIT_SHA=$GIT_SHA

#TODO if this dockerfile will support other pipelines, we need to not always activate comfystream
RUN echo "source /workspace/miniconda3/etc/profile.d/conda.sh && conda activate comfystream" >> /conda_activate.sh && \
    chmod +x /conda_activate.sh
ENV BASH_ENV=/conda_activate.sh

CMD ["bash", "-c", "uvicorn app.main:app --log-config app/cfg/uvicorn_logging_config.json --host '' --port 8000"]
