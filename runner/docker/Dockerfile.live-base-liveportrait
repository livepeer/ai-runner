ARG BASE_IMAGE=livepeer/ai-runner:live-base
FROM ${BASE_IMAGE}

# Download and install the NVIDIA TensorRT repository local deb
RUN wget https://developer.nvidia.com/downloads/compute/machine-learning/tensorrt/secure/8.6.1/local_repos/nv-tensorrt-local-repo-ubuntu2204-8.6.1-cuda-12.0_1.0-1_amd64.deb && \
    dpkg -i nv-tensorrt-local-repo-ubuntu2204-8.6.1-cuda-12.0_1.0-1_amd64.deb && \
    cp /var/nv-tensorrt-local-repo-ubuntu2204-8.6.1-cuda-12.0/*-keyring.gpg /usr/share/keyrings/ && \
    rm nv-tensorrt-local-repo-ubuntu2204-8.6.1-cuda-12.0_1.0-1_amd64.deb

# Install TensorRT Python library
RUN apt-get update && \
    apt-get install -y --no-install-recommends tensorrt && \
    rm -rf /var/lib/apt/lists/*

# Install cmake and build dependencies for grid-sample3d-trt-plugin
RUN apt-get update && \
    apt-get install -y --no-install-recommends cmake build-essential && \
    rm -rf /var/lib/apt/lists/*

# Build grid-sample3d-trt-plugin for FasterLivePortrait
RUN git clone https://github.com/SeanWangJS/grid-sample3d-trt-plugin.git /opt/grid-sample3d-trt-plugin && \
    cd /opt/grid-sample3d-trt-plugin && \
    sed -i 's/set_target_properties(${PROJECT_NAME} PROPERTIES CUDA_ARCHITECTURES ".*")/set_target_properties(${PROJECT_NAME} PROPERTIES CUDA_ARCHITECTURES "60;70;75;80;86")/' CMakeLists.txt && \
    mkdir build && cd build && \
    export PATH=/usr/local/cuda/bin:$PATH && \
    cmake .. -DTensorRT_ROOT=/usr/include && \
    make

# Install required Python version
ARG PYTHON_VERSION=3.10
RUN pyenv install $PYTHON_VERSION && \
    pyenv global $PYTHON_VERSION && \
    pyenv rehash

# Upgrade pip and install required packages
ARG PIP_VERSION=23.3.2
ENV PIP_PREFER_BINARY=1
RUN pip install --no-cache-dir --upgrade pip==${PIP_VERSION} setuptools==69.5.1 wheel==0.43.0

# Install Python TensorRT packages
RUN pip install --no-cache-dir tensorrt==8.6.1 numpy==1.26.4

# Clone the FasterLivePortrait repository
RUN mkdir -p /app/app/live && \
    git clone https://github.com/warmshao/FasterLivePortrait.git /app/app/live/FasterLivePortrait && \
    cd /app/app/live/FasterLivePortrait && \
    git checkout 6aa8104b03499ebe2a881c8fbaf55ff628235f4f

WORKDIR /app/app/live/FasterLivePortrait

COPY images/flame-serious.jpg \
    images/flame-smile.jpg \
    images/heart.jpg \
    images/pirate.jpg \
    ./assets/examples/source/

# FasterLivePortrait doesn't pin versions so we use a custom requirements.txt
COPY requirements-liveportrait.txt requirements.txt
RUN pip install --no-cache-dir -r requirements.txt

# TODO: Setup dependencies for animal models

WORKDIR /app

# Create symlinks for checkpoints as FasterLivePortrait relies heavily on relative paths
RUN ln -s /models/FasterLivePortrait--checkpoints /app/app/live/FasterLivePortrait/checkpoints
RUN ln -s /models/FasterLivePortrait--checkpoints ./checkpoints
